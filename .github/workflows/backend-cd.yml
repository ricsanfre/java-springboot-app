name: CD - Deploy Backend
on:
  # Launch workflow manually
  workflow_dispatch:
  # Launch workflow on push on master
  push:
    branches:
      - master
    paths:
      - backend/**
jobs:
  deploy:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    # Configuring PostgreSQL service container
    # https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the user and password for postgres
        env:
          POSTGRES_USER: ricsanfre
          POSTGRES_PASSWORD: password
          POSTGRES_DB: customer
        ports:
          - 5332:5432
          # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend
    steps:
      # Checkout code
      - uses: actions/checkout@v4
      # Set-up Java JDK
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Set build number
      - name: Set build number
        id: build-number
        run: echo BUILD_NUMBER=`date '+%d.%m.%Y.%H.%M.%S'` >> $GITHUB_OUTPUT

      - name: Build Package and Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build

        # sed -i -E 's_(ricsanfre/spring-boot-demo-api:)([^"]*)_\1'${BUILD_NUMBER}'_' Dockerrun.aws.json
      - name: Update Dockerrun.aws.json with Build number
        run: |
          echo "Dockerrun.aws.json before updating"
          cat Dockerrun.aws.json
          sed -i -E 's_(ricsanfre/spring-boot-demo-api:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating"
          cat Dockerrun.aws.json

      - name: Deploy to AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: backend/Dockerrun.aws.json
          version_description: ${{github.SHA}}

      - name: Docker commit Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
          git push
          
