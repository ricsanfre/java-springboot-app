server:
  # Tomcat port
  port: 8080
  # Include error messages
  error:
    include-message: always
    include-binding-errors: always
    include-stack-trace: on_param

# CORS config
cors:
  allowed-origins: "*"
  allowed-methods: "*"
  allowed-headers: "*"
  exposed-headers: "*"

spring:
  main:
    # Servlet as default application type
    web-application-type: servlet
  # PostgreSQL configuration
  datasource:
    url: jdbc:postgresql://localhost:5332/customer
    username: ricsanfre
    password: password
  # JPA configuration
  jpa:
    hibernate:
      # Create and delete schema whenever app is restarted.
      # ddl-auto: create-drop
      # Do not automatically create DB schema
      # Let's use Flyway
      # ddl-auto: none
      # validate DB schema without doing changes on DB
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show_sql: true
  servlet:
    multipart:
      max-file-size: 11MB
      max-request-size: 11MB
  codec:
    max-in-memory-size: 11MB
#  Actuators
#  https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html

# Enable exposure of all endpoints. By default, only health is exposed by web endpoint
management:
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  # Enabling exposure of env app information in applications.properties file
  info:
    env:
      enabled: true
  # Show health details
  endpoint:
    health:
      show-details: always
# Configuring env info
info:
  app:
    name: spring-boot-example
    description: "Spring Boot Master Class code"
    version: "1.0"
  company: ricsanfre

# AWS config
aws:
  region: eu-west-3
  s3:
    mock: true
    buckets:
      customer: demo-app-bucket-test